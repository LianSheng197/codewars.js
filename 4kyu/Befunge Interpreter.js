// https://www.codewars.com/kata/526c7b931666d07889000a3c
// 
// 雖然沒什麼意義，但還是留個單行的版本

function interpret(code) {
    return ROW_SIZE = code.split("\n").sort((a, b) => b.length - a.length)[0].length, dir = [1, -1, -ROW_SIZE, ROW_SIZE], stack = [], currentDirection = 0, i = 0, isStringMode = false, result = "", (code = code.split("\n").map(e => (e += " ".repeat(ROW_SIZE - e.length))).join("").split("")), move = _ => (i += dir[currentDirection]), top = _ => (stack.length > 0 ? stack[stack.length - 1] : null), pop = _ => stack.pop(), push = data => stack.push(data), put = (x, y, v) => (code[x + y * ROW_SIZE] = String.fromCharCode(v)), get = (x, y) => push(("" + code[x + y * ROW_SIZE]).charCodeAt(0)), output = _ => (x = stack.pop(), (result += x)), outputChar = _ => (x = stack.pop(), (result += String.fromCharCode(x))), WHILE_LOOP_FLAG = true, (whileLoop = _ => ((cursor = code[i], isStringMode === false ? ("0123456789".includes(cursor) ? push(cursor - 0) : (cursor == "+" ? (a = pop(), b = pop(), push(a + b)) : (cursor == "-" ? (a = pop(), b = pop(), push(b - a)) : (cursor == "*" ? (a = pop(), b = pop(), push(a * b)) : (cursor == "/" ? (a = pop(), b = pop(), push(a == 0 ? 0 : b / a)) : (cursor == "%" ? (a = pop(), b = pop(), push(a == 0 ? 0 : b % a)) : (cursor == "!" ? (x = pop(), push(x == 0 ? 1 : 0)) : (cursor == "`" ? (a = pop(), b = pop(), push(b > a ? 1 : 0)) : (cursor == ">" ? (currentDirection = 0) : (cursor == "<" ? (currentDirection = 1) : (cursor == "^" ? (currentDirection = 2) : (cursor == "v" ? (currentDirection = 3) : (cursor == "?" ? (currentDirection = Math.floor(Math.random() * 4)) : (cursor == "_" ? (x = pop(), (currentDirection = x == 0 ? 0 : 1)) : (cursor == "|" ? (x = pop(), (currentDirection = x == 0 ? 3 : 2)) : (cursor == "\"" ? (isStringMode = true) : (cursor == ":" ? (x = top(), push(x ? x : 0)) : (cursor == "\\" ? (a = pop(), b = pop(), push(a), push(b)) : (cursor == "$" ? pop() : (cursor == "." ? output() : (cursor == "," ? outputChar() : (cursor == "#" ? move() : (cursor == "p" ? (y = pop(), x = pop(), v = pop(), put(x, y, v)) : (cursor == "g" ? (y = pop(), x = pop(), get(x, y)) : (cursor == "@" && (WHILE_LOOP_FLAG = false)))))))))))))))))))))))))) : (cursor == "\"" ? (isStringMode = false) : push(cursor.charCodeAt(0)))), move(), WHILE_LOOP_FLAG && whileLoop()))(), result;
}